openapi: "3.0.0"
info:
  title: ImolaSportivaApi
  description: ImolaSportivaApi
  version: 1.0.0
servers:
  - url: '/api/v1'
tags:
  - name: Prenotazioni
  - name: Utenti
  - name: ProveOpenApi

paths:

  '/prove/provaDiversiFontiDati/{id}':
    post:
      tags:
        - "ProveOpenApi"
      operationId: provaDiversiFontiDati
      requestBody:
        description: 'dati body'
        content:
          application/json:
           schema:
              $ref: '#/components/schemas/TestDTO'
      parameters:
        - name: param1
          in: query
          description: 'dati query'
          schema:
           type: string
        - name: id
          in: path
          description: 'dati path'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            text/plain:
              schema:
                type: string

  '/prove/provaParametroFile':
    get:
      tags:
        - "ProveOpenApi"
      operationId: provaFile
      parameters:
        - name: format
          in: query
          description: 'Prova tra formati JSON e ICS'
          schema:
           type: object
           enum:
             - json
             - ics
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                type: object
            text/calendar:
              schema:
                type: string
                format: binary

  '/utenti':
    post:
      tags:
        - "Utenti"
      operationId: postUtente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utente"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/utenti/{idUtente}':
    get:
      tags:
        - "Utenti"
      operationId: getUtenteById
      parameters:
        - in: path
          name: idUtente
          required: true
          description: "restituisce l'utente tramite il suo Id"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Utenti"
      operationId: deleteUtente
      parameters:
        - in: path
          name: idUtente
          required: true
          description: "elimina l'utente tramite il suo Id"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Utenti"
      operationId: putUtente
      parameters:
        - in: path
          name: idUtente
          required: true
          description: "aggiorna l'utente tramite il suo Id"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Utente"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Utente"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/prenotazioni':
    get:
      tags:
        - "Prenotazioni"
      operationId: getPrenotazioni
      parameters:
        - name: anno
          in: query
          description: 'filtro anno'
          schema:
            type: string
          required: false
        - name: mese
          in: query
          description: 'filtro mese'
          schema:
            type: string
          required: false
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListaPrenotazioni"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - "Prenotazioni"
      operationId: postPrenotazione
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prenotazione"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prenotazione"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  '/prenotazioni/{idPrenotazione}':
    get:
      tags:
        - "Prenotazioni"
      operationId: getPrenotazioneById
      parameters:
        - in: path
          name: idPrenotazione
          required: true
          description: "restituisce la prenotazione tramite il suo Id"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prenotazione"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "Prenotazioni"
      operationId: deletePrenotazione
      parameters:
        - in: path
          name: idPrenotazione
          required: true
          description: "elimina la prenotazione tramite il suo Id"
          schema:
            type: string
      responses:
        '200':
          description: "Success"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      tags:
        - "Prenotazioni"
      operationId: putPrenotazione
      parameters:
        - in: path
          name: idPrenotazione
          required: true
          description: "aggiorna la prenotazione tramite il suo Id"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Prenotazione"
      responses:
        '200':
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prenotazione"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '503':
          description: "Service Unavailable"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:

  schemas:

    TestDTO:
      type: object
      required:
        - prova
      properties:
        prova:
          type: string

    Utente:
      type: object
      required:
        - id
        - nome
        - cognome
        - dataNascita
        - telefono
      properties:
        id:
          type: string
        nome:
          type: string
        cognome:
          type: string
        dataNascita:
          type: string
        telefono:
          type: string

    Prenotazione:
      type: object
      required:
        - id
        - idUtentePrenotato
        - durataPrenotazioneOre
        - durataDeadlineCancellazione
        - dataPrenotazione
        - numeroPartecipanti
        - quota
      properties:
        id:
          type: string
        idUtentePrenotato:
          type: string
        durataPrenotazioneOre:
          type: string
        durataDeadlineCancellazioneOre:
          type: string
        dataPrenotazione:
          type: string
        numeroPartecipanti:
          type: string
        quota:
          type: string

    ListaPrenotazioni:
      type: array
      items:
        $ref: "#/components/schemas/Prenotazione"

    Error:
      type: object
      required:
        - code
        - message
        - layer
        - component
      properties:
        code:
          type: string
        message:
          type: string
        layer:
          type: string
        component:
          type: string